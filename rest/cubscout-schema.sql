-- MySQL Script generated by MySQL Workbench
-- Mon 27 Feb 2017 08:59:52 PM PST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_ENGINE_SUBSTITUTION,ERROR_FOR_DIVISION_BY_ZERO,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema CubScout
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema CubScout
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `CubScout` DEFAULT CHARACTER SET latin1 ;
USE `CubScout` ;

-- -----------------------------------------------------
-- Table `CubScout`.`event_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`event_types` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `Type_UNIQUE` ON `CubScout`.`event_types` (`Type` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`game_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`game_types` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `Type_UNIQUE` ON `CubScout`.`game_types` (`Type` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`games`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`games` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(255) NOT NULL,
  `Type` INT NOT NULL,
  `Year` YEAR NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_games_game_types1`
    FOREIGN KEY (`Type`)
    REFERENCES `CubScout`.`game_types` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
AUTO_INCREMENT = 50
DEFAULT CHARACTER SET = latin1;

CREATE UNIQUE INDEX `Name` ON `CubScout`.`games` (`Name` ASC);

CREATE INDEX `fk_games_game_types1_idx` ON `CubScout`.`games` (`Type` ASC);

CREATE UNIQUE INDEX `id_type` ON `CubScout`.`games` (`ID` ASC, `Type` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`events`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`events` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Game` INT(11) NOT NULL,
  `Name` VARCHAR(100) NULL DEFAULT NULL,
  `Location` VARCHAR(100) NULL DEFAULT NULL,
  `Type` INT NOT NULL,
  `StartDate` DATE NOT NULL,
  `EndDate` DATE NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_events_event_types1`
    FOREIGN KEY (`Type`)
    REFERENCES `CubScout`.`event_types` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_events_games1`
    FOREIGN KEY (`Game`)
    REFERENCES `CubScout`.`games` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_events_event_types1_idx` ON `CubScout`.`events` (`Type` ASC);

CREATE INDEX `fk_events_games1_idx` ON `CubScout`.`events` (`Game` ASC);

CREATE UNIQUE INDEX `fk_game_id` ON `CubScout`.`events` (`ID` ASC, `Game` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`scorecard_section_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`scorecard_section_types` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `Type_UNIQUE` ON `CubScout`.`scorecard_section_types` (`Type` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`scorecard_sections`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`scorecard_sections` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Game` INT(11) NOT NULL,
  `Index` INT(11) NOT NULL,
  `Type` INT(11) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `scorecard_sections_ibfk_1`
    FOREIGN KEY (`Game`)
    REFERENCES `CubScout`.`games` (`ID`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_scorecard_sections_scorecard_section_types1`
    FOREIGN KEY (`Type`)
    REFERENCES `CubScout`.`scorecard_section_types` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
AUTO_INCREMENT = 79
DEFAULT CHARACTER SET = latin1;

CREATE UNIQUE INDEX `SectionGameID` ON `CubScout`.`scorecard_sections` (`Game` ASC, `Index` ASC);

CREATE INDEX `Type` ON `CubScout`.`scorecard_sections` (`Type` ASC);

CREATE UNIQUE INDEX `fk` ON `CubScout`.`scorecard_sections` (`ID` ASC, `Type` ASC);

CREATE UNIQUE INDEX `ID_UNIQUE` ON `CubScout`.`scorecard_sections` (`ID` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`field_section_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`field_section_types` (
  `Type` INT NOT NULL,
  PRIMARY KEY (`Type`),
  CONSTRAINT `fk_field_section_types_scorecard_section_types1`
    FOREIGN KEY (`Type`)
    REFERENCES `CubScout`.`scorecard_section_types` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CubScout`.`score_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`score_types` (
  `ID` INT NOT NULL,
  `Type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `Type_UNIQUE` ON `CubScout`.`score_types` (`Type` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`field_sections`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`field_sections` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `SectionType` INT NOT NULL,
  `FieldName` VARCHAR(100) NOT NULL,
  `ScoreType` INT NOT NULL,
  `IsNullable` TINYINT(1) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_field_sections_scorecard_sections1`
    FOREIGN KEY (`ID` , `SectionType`)
    REFERENCES `CubScout`.`scorecard_sections` (`ID` , `Type`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_field_sections_field_section_types1`
    FOREIGN KEY (`SectionType`)
    REFERENCES `CubScout`.`field_section_types` (`Type`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_field_sections_score_types1`
    FOREIGN KEY (`ScoreType`)
    REFERENCES `CubScout`.`score_types` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
AUTO_INCREMENT = 79
DEFAULT CHARACTER SET = latin1;

CREATE UNIQUE INDEX `index2` ON `CubScout`.`field_sections` (`ID` ASC, `IsNullable` ASC);

CREATE UNIQUE INDEX `fk_field_sections_scorecard_sections1_idx` ON `CubScout`.`field_sections` (`ID` ASC, `SectionType` ASC);

CREATE INDEX `fk_field_sections_field_section_types1_idx` ON `CubScout`.`field_sections` (`SectionType` ASC);

CREATE INDEX `fk_field_sections_score_types1_idx` ON `CubScout`.`field_sections` (`ScoreType` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`nullable_field_sections_is_nullable`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`nullable_field_sections_is_nullable` (
  `IsNullable` TINYINT(1) NOT NULL,
  PRIMARY KEY (`IsNullable`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CubScout`.`nullable_field_sections`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`nullable_field_sections` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `IsNullable` TINYINT(1) NOT NULL,
  `NullWhen` ENUM('Checked', 'Unchecked') NOT NULL,
  `CheckBoxMessage` TEXT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_nullable_field_sections_field_sections1`
    FOREIGN KEY (`ID` , `IsNullable`)
    REFERENCES `CubScout`.`field_sections` (`ID` , `IsNullable`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_nullable_field_sections_nullable_field_sections_is_nullable1`
    FOREIGN KEY (`IsNullable`)
    REFERENCES `CubScout`.`nullable_field_sections_is_nullable` (`IsNullable`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
AUTO_INCREMENT = 79
DEFAULT CHARACTER SET = latin1;

CREATE UNIQUE INDEX `index2` ON `CubScout`.`nullable_field_sections` (`ID` ASC, `IsNullable` ASC);

CREATE INDEX `fk_nullable_field_sections_nullable_field_sections_is_nulla_idx` ON `CubScout`.`nullable_field_sections` (`IsNullable` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`paragraph_sections_section_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`paragraph_sections_section_types` (
  `Type` INT NOT NULL,
  PRIMARY KEY (`Type`),
  CONSTRAINT `fk_paragraph_sections_section_types_scorecard_section_types1`
    FOREIGN KEY (`Type`)
    REFERENCES `CubScout`.`scorecard_section_types` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CubScout`.`paragraph_sections`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`paragraph_sections` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `SectionType` INT NOT NULL DEFAULT 3,
  `Paragraph` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_paragraph_sections_scorecard_sections1`
    FOREIGN KEY (`ID` , `SectionType`)
    REFERENCES `CubScout`.`scorecard_sections` (`ID` , `Type`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_paragraph_sections_paragraph_sections_section_types1`
    FOREIGN KEY (`SectionType`)
    REFERENCES `CubScout`.`paragraph_sections_section_types` (`Type`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_paragraph_sections_scorecard_sections1_idx` ON `CubScout`.`paragraph_sections` (`ID` ASC, `SectionType` ASC);

CREATE INDEX `fk_paragraph_sections_paragraph_sections_section_types1_idx` ON `CubScout`.`paragraph_sections` (`SectionType` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`teams`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`teams` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Number` INT NOT NULL,
  `GameType` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_teams_game_types1`
    FOREIGN KEY (`GameType`)
    REFERENCES `CubScout`.`game_types` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `number_game_type` ON `CubScout`.`teams` (`GameType` ASC, `Number` ASC);

CREATE INDEX `index4` ON `CubScout`.`teams` (`ID` ASC, `GameType` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`robots`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`robots` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Team` INT(11) NOT NULL,
  `Name` VARCHAR(45) NULL DEFAULT NULL,
  `Game` INT(11) NOT NULL,
  `GameType` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_robots_teams1`
    FOREIGN KEY (`Team` , `GameType`)
    REFERENCES `CubScout`.`teams` (`ID` , `GameType`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_robots_games1`
    FOREIGN KEY (`Game` , `GameType`)
    REFERENCES `CubScout`.`games` (`ID` , `Type`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = latin1;

CREATE UNIQUE INDEX `ID` ON `CubScout`.`robots` (`ID` ASC, `Game` ASC);

CREATE UNIQUE INDEX `Number` ON `CubScout`.`robots` (`Team` ASC, `GameType` ASC);

CREATE UNIQUE INDEX `index5` ON `CubScout`.`robots` (`Game` ASC, `GameType` ASC, `Team` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`matches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`matches` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Number` INT NOT NULL,
  `Event` INT NOT NULL,
  `Game` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_matches_events1`
    FOREIGN KEY (`Event` , `Game`)
    REFERENCES `CubScout`.`events` (`ID` , `Game`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_game` ON `CubScout`.`matches` (`ID` ASC, `Game` ASC);

CREATE UNIQUE INDEX `index4` ON `CubScout`.`matches` (`Number` ASC, `Event` ASC, `Game` ASC);

CREATE INDEX `fk_matches_events1_idx` ON `CubScout`.`matches` (`Event` ASC, `Game` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`robots_in_matches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`robots_in_matches` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Match` INT NOT NULL,
  `Robot` INT NOT NULL,
  `Game` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_robots_in_matches_matches1`
    FOREIGN KEY (`Match` , `Game`)
    REFERENCES `CubScout`.`matches` (`ID` , `Game`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_robots_in_matches_robots1`
    FOREIGN KEY (`Robot` , `Game`)
    REFERENCES `CubScout`.`robots` (`ID` , `Game`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Table which identifies which robots participated in which matches.\n\nConstrains robots and matches to ensure that robots built for a different game than that being hosted at the event the match was part of cannot participate in the match.\n\nTable implicitely identifies which robots participated in which events as a result of the above constraint.';

CREATE UNIQUE INDEX `UNIQUE` ON `CubScout`.`robots_in_matches` (`Match` ASC, `Robot` ASC, `Game` ASC);

CREATE INDEX `fk_robots_in_matches_robots1_idx` ON `CubScout`.`robots_in_matches` (`Robot` ASC, `Game` ASC);

CREATE INDEX `fk_robots_in_matches_matches1_idx` ON `CubScout`.`robots_in_matches` (`Match` ASC, `Game` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`scorecard_section_submissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`scorecard_section_submissions` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `RobotInMatch` INT(11) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_scorecard_section_submissions_robot_game_event_matches1`
    FOREIGN KEY (`RobotInMatch`)
    REFERENCES `CubScout`.`robots_in_matches` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COMMENT = 'Reference table used in foreign key constraint to ensure that `scorecard_section_non_nullable_submissions` only cooresponds to sections in `field_sections` which are not optional';

CREATE INDEX `ScorecardSubmissionID` ON `CubScout`.`scorecard_section_submissions` (`RobotInMatch` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`title_sections_section_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`title_sections_section_types` (
  `Type` INT NOT NULL,
  PRIMARY KEY (`Type`),
  CONSTRAINT `fk_title_sections_section_types_scorecard_section_types1`
    FOREIGN KEY (`Type`)
    REFERENCES `CubScout`.`scorecard_section_types` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CubScout`.`title_sections`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`title_sections` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `SectionType` INT NOT NULL DEFAULT 2,
  `Title` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_title_sections_scorecard_sections1`
    FOREIGN KEY (`ID` , `SectionType`)
    REFERENCES `CubScout`.`scorecard_sections` (`ID` , `Type`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_title_sections_title_sections_section_types1`
    FOREIGN KEY (`SectionType`)
    REFERENCES `CubScout`.`title_sections_section_types` (`Type`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
AUTO_INCREMENT = 77
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `fk_title_sections_scorecard_sections1_idx` ON `CubScout`.`title_sections` (`ID` ASC, `SectionType` ASC);

CREATE INDEX `fk_title_sections_title_sections_section_types1_idx` ON `CubScout`.`title_sections` (`SectionType` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`scorecard_section_non_nullable_submission_is_nullable`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`scorecard_section_non_nullable_submission_is_nullable` (
  `IsNullable` TINYINT(1) NOT NULL,
  PRIMARY KEY (`IsNullable`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CubScout`.`scorecard_section_non_nullable_submissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`scorecard_section_non_nullable_submissions` (
  `ID` INT NOT NULL,
  `Section` INT NOT NULL,
  `IsNullable` TINYINT(1) NOT NULL,
  `Score` INT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_scorecard_section_non_nullable_submissions_scorecard_secti1`
    FOREIGN KEY (`ID`)
    REFERENCES `CubScout`.`scorecard_section_submissions` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_scorecard_section_non_nullable_submissions_field_sections1`
    FOREIGN KEY (`Section` , `IsNullable`)
    REFERENCES `CubScout`.`field_sections` (`ID` , `IsNullable`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_scorecard_section_non_nullable_submissions_scorecard_secti2`
    FOREIGN KEY (`IsNullable`)
    REFERENCES `CubScout`.`scorecard_section_non_nullable_submission_is_nullable` (`IsNullable`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
COMMENT = 'table to hold match scores which must not be null';

CREATE INDEX `fk_scorecard_section_non_nullable_submissions_field_section_idx` ON `CubScout`.`scorecard_section_non_nullable_submissions` (`Section` ASC, `IsNullable` ASC);

CREATE INDEX `fk_scorecard_section_non_nullable_submissions_scorecard_sec_idx` ON `CubScout`.`scorecard_section_non_nullable_submissions` (`IsNullable` ASC);


-- -----------------------------------------------------
-- Table `CubScout`.`scorecard_section_nullable_submissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CubScout`.`scorecard_section_nullable_submissions` (
  `ID` INT NOT NULL,
  `Section` INT NOT NULL,
  `Score` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_scorecard_section_nullable_submissions_scorecard_section_s1`
    FOREIGN KEY (`ID`)
    REFERENCES `CubScout`.`scorecard_section_submissions` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_scorecard_section_nullable_submissions_nullable_field_sect1`
    FOREIGN KEY (`Section`)
    REFERENCES `CubScout`.`nullable_field_sections` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
COMMENT = 'table to hold match scores which can be null';

CREATE INDEX `fk_scorecard_section_nullable_submissions_nullable_field_se_idx` ON `CubScout`.`scorecard_section_nullable_submissions` (`Section` ASC);

USE `CubScout` ;

-- -----------------------------------------------------
-- procedure get_current_events
-- -----------------------------------------------------

DELIMITER $$
USE `CubScout`$$
CREATE DEFINER=`trevor`@`%` PROCEDURE `get_current_events`()
BEGIN
	SELECT  `events`.`ID` as `EventID`,`events`.`Name` as `EventName`,`events`.`Type` as `EventType`,
	        `events`.`Location` as `EventLocation`,
			`games`.`ID` as `GameID`,`games`.`Name` as `GameName`,`games`.`Type` as `GameType`,
            `games`.`Year` as `GameYear`,
            `scorecard_sections`.`ID` as `SectionID`,`scorecard_sections`.`Index` as `SectionIndex`,
            `scorecard_sections`.`Type` as `SectionType`,
            `field_sections`.`FieldName`,`field_sections`.`ScoreType` as `FieldType`,`field_sections`.`IsNullable` as `FieldIsNullable`,
            `nullable_field_sections`.`NullWhen` as `FieldNullWhen`, `nullable_field_sections`.`CheckBoxMessage` as `FieldCheckboxMessage`,
            `title_sections`.`Title` as `SectionTitle`, `paragraph_sections`.`Paragraph` as `SectionParagraph`
	FROM `events`
    JOIN `games`
		ON `events`.`game` = `games`.`ID`
        AND `events`. `StartDate`<CURDATE()
	JOIN `scorecard_sections`
		ON `scorecard_sections`.`Game` = `games`.`ID`
	LEFT JOIN `field_sections`
		ON `field_sections`.`ID` = `scorecard_sections`.`ID`
	LEFT JOIN `nullable_field_sections`
		ON `field_sections`.`ID` = `nullable_field_sections`.`ID`
	LEFT JOIN `title_sections`
		ON `title_sections`.`ID` = `scorecard_sections`.`ID`
	LEFT JOIN `paragraph_sections`
		ON `paragraph_sections`.`ID` = `scorecard_sections`.`ID`
    ORDER BY `events`.`StartDate` DESC, `EventID`,`SectionIndex`;
                        
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure match_submit
-- -----------------------------------------------------

DELIMITER $$
USE `CubScout`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `match_submit`(IN `in_team_number` INT(11), IN `in_event_id` INT(11),
    IN `in_match_number` INT(11), IN `in_section_id` INT(11), IN `in_score_value` Int(11))
    MODIFIES SQL DATA
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    DECLARE `v_is_nullable` BOOLEAN DEFAULT FALSE;
    DECLARE `v_scorecard_section_submission_ID` INTEGER;
    DECLARE `v_game_id` INTEGER;
    DECLARE `v_game_type_id` INTEGER;
    DECLARE `v_team_id` INTEGER;
    DECLARE `v_robot_id` INTEGER;
    DECLARE `v_match_id` INTEGER;
    DECLARE `v_robot_in_match_id` INTEGER;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN 
			ROLLBACK; 
		END;
	DECLARE EXIT HANDLER FOR 1329
		BEGIN 
			ROLLBACK; 
			RESIGNAL SET MYSQL_ERRNO = 4500;
		END;
	DECLARE EXIT HANDLER FOR 1172
		BEGIN 
			ROLLBACK; 
            RESIGNAL SET MYSQL_ERRNO = 4500;
		END;

START TRANSACTION;

	SELECT `games`.`ID`, `games`.`Type` INTO `v_game_id`, `v_game_type_id`
	FROM `games`
    JOIN `events`
		ON `events`.`Game` = `games`.`ID`
        AND `events`.`ID` = `in_event_id`;
        
	INSERT INTO `teams` (`Number`,`GameType`) VALUES (`in_team_number`,`v_game_type_id`)
    ON DUPLICATE KEY UPDATE `teams`.`ID` = `teams`.`ID`;

	SELECT `teams`.`ID` INTO `v_team_id`
    FROM `teams`
		WHERE `teams`.`Number` = `in_team_number`
        AND `teams`.`GameType` = `v_game_type_id`;

    INSERT INTO `robots` (`Team`,`Game`,`GameType`)
		VALUES (`v_team_id`, `v_game_id`,`v_game_type_id`)
	ON DUPLICATE KEY UPDATE `robots`.`ID` = `robots`.`ID`;
    
    SELECT `robots`.`ID` INTO `v_robot_id`
    FROM `robots`
		WHERE `robots`.`Team` = `v_team_id`
        AND `robots`.`Game` = `v_game_id`;
     
    INSERT INTO `matches` (`Number`,`Event`,`Game`) VALUES (`in_match_number`,`in_event_id`,`v_game_id`)
	ON DUPLICATE KEY UPDATE `matches`.`ID` = `matches`.`ID`;

START TRANSACTION;
	
    SELECT `matches`.`ID` into `v_match_id`
    FROM `matches`
		WHERE `matches`.`Number` = `in_match_number`
        AND `matches`.`Event` = `in_event_id`;

	INSERT INTO `robots_in_matches` (`Robot`,`Match`,`Game`)
		VALUES (`v_robot_id`, `v_match_id`,`v_game_id`)
	ON DUPLICATE KEY UPDATE `robots_in_matches`.`ID` = `robots_in_matches`.`ID`;
        
	SELECT `robots_in_matches`.`ID` INTO `v_robot_in_match_id`
    FROM `robots_in_matches`
		WHERE `robots_in_matches`.`Robot` = `v_robot_id`
        AND `robots_in_matches`.`Match` = `v_match_id`;

START TRANSACTION;
  
    INSERT INTO `scorecard_section_submissions` (`RobotInMatch`)
		VALUES (`v_robot_in_match_id`);
    
    SET `v_scorecard_section_submission_ID` = LAST_INSERT_ID();
    
    SELECT `field_sections`.`IsNullable` INTO `v_is_nullable`
    FROM `field_sections`
    WHERE `field_sections`.`ID` = `in_section_id`;
    
    IF `v_is_nullable` THEN
		INSERT INTO `scorecard_section_nullable_submissions` (`ID`,`Section`,`IsNullable`,`Score`)
			VALUES (`v_scorecard_section_submission_ID`,`in_section_id`,`v_is_nullable`,`in_score_value`);
	ELSE
		INSERT INTO `scorecard_section_non_nullable_submissions` (`ID`,`Section`,`IsNullable`,`Score`)
			VALUES (`v_scorecard_section_submission_ID`,`in_section_id`,`v_is_nullable`,`in_score_value`);
    END IF;
    COMMIT;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `CubScout`.`event_types`
-- -----------------------------------------------------
START TRANSACTION;
USE `CubScout`;
INSERT INTO `CubScout`.`event_types` (`ID`, `Type`) VALUES (DEFAULT, 'Regional');
INSERT INTO `CubScout`.`event_types` (`ID`, `Type`) VALUES (DEFAULT, 'District');
INSERT INTO `CubScout`.`event_types` (`ID`, `Type`) VALUES (DEFAULT, 'National');
INSERT INTO `CubScout`.`event_types` (`ID`, `Type`) VALUES (DEFAULT, 'Test');

COMMIT;


-- -----------------------------------------------------
-- Data for table `CubScout`.`scorecard_section_types`
-- -----------------------------------------------------
START TRANSACTION;
USE `CubScout`;
INSERT INTO `CubScout`.`scorecard_section_types` (`ID`, `Type`) VALUES (DEFAULT, 'field');
INSERT INTO `CubScout`.`scorecard_section_types` (`ID`, `Type`) VALUES (DEFAULT, 'title');
INSERT INTO `CubScout`.`scorecard_section_types` (`ID`, `Type`) VALUES (DEFAULT, 'paragraph');

COMMIT;


-- -----------------------------------------------------
-- Data for table `CubScout`.`field_section_types`
-- -----------------------------------------------------
START TRANSACTION;
USE `CubScout`;
INSERT INTO `CubScout`.`field_section_types` (`Type`) VALUES (1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `CubScout`.`nullable_field_sections_is_nullable`
-- -----------------------------------------------------
START TRANSACTION;
USE `CubScout`;
INSERT INTO `CubScout`.`nullable_field_sections_is_nullable` (`IsNullable`) VALUES (1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `CubScout`.`paragraph_sections_section_types`
-- -----------------------------------------------------
START TRANSACTION;
USE `CubScout`;
INSERT INTO `CubScout`.`paragraph_sections_section_types` (`Type`) VALUES (3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `CubScout`.`title_sections_section_types`
-- -----------------------------------------------------
START TRANSACTION;
USE `CubScout`;
INSERT INTO `CubScout`.`title_sections_section_types` (`Type`) VALUES (2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `CubScout`.`scorecard_section_non_nullable_submission_is_nullable`
-- -----------------------------------------------------
START TRANSACTION;
USE `CubScout`;
INSERT INTO `CubScout`.`scorecard_section_non_nullable_submission_is_nullable` (`IsNullable`) VALUES (0);

COMMIT;

USE `CubScout`;

DELIMITER $$
USE `CubScout`$$
CREATE DEFINER = CURRENT_USER TRIGGER `CubScout`.`events_start_date_bef-re_end_date` BEFORE INSERT ON `events` FOR EACH ROW
BEGIN
	IF NEW.`EndDate`<NEW.`StartDate` THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "Event start date must be before end date";
    END IF;
END$$


DELIMITER ;
